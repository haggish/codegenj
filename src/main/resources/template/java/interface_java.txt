/* Source generated by codegenj (https://github.com/olir/codegenj) - DO NOT EDIT!
 *
 * This license does not apply to any contained documentation in the source!
 *
 * This generated output is free and unencumbered software released into the public domain.
 *
 * Anyone is free to copy, modify, publish, use, compile, sell, or
 * distribute this software, either in source code form or as a compiled
 * binary, for any purpose, commercial or non-commercial, and by any
 * means.
 * 
 * In jurisdictions that recognize copyright laws, the author or authors
 * of this software dedicate any and all copyright interest in the
 * software to the public domain. We make this dedication for the benefit
 * of the public at large and to the detriment of our heirs and
 * successors. We intend this dedication to be an overt act of
 * relinquishment in perpetuity of all present and future rights to this
 * software under copyright law.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 * 
 * For more information, please refer to <http://unlicense.org>
 */
$$$interface.pcode$$$
import java.util.List;
import java.util.Map;
import java.io.IOException;

/**
 * interface for $$$interface.name$$$
 */  
public interface $$$interface.uname$$$ {
 
###for de.serviceflow.codegenj.CollectorAPI###
    public List<$$$cinterfacename$$$> $$$mname$$$();
###end###
    
###for properties###
###case read###
    /**
     * Reads property $$$property.name$$$.
     *
     *$$$method.comment$$$
     *
     * @return the property value.
     */
    public $$$method.javareturntype$$$ $$$method.jname$$$();
###end###
###case write###
    /**
     * Writes property $$$property.name$$$.
     *
     *$$$method.comment$$$
     *
     * @param $$$property.name$$$ the new value.
     */
    public void $$$method.jname$$$($$$method.javaargs$$$);
###end###
###end###

###for method###
    /**
     * $$$method.name$$$:
     *
     * $$$method.comment$$$
     */
    public $$$method.javareturntype$$$ $$$method.jname$$$($$$method.javaargs$$$) throws IOException;
###end
}